{
    "version": "https://jsonfeed.org/version/1",
    "title": "要跨年了哟^_^",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2020/12/30/Shiro/",
            "url": "http://example.com/2020/12/30/Shiro/",
            "title": "Spring Boot整合Shiro",
            "date_published": "2020-12-30T08:25:43.821Z",
            "content_html": "<h1 id=\"Shiro\"><a href=\"#Shiro\" class=\"headerlink\" title=\"Shiro\"></a>Shiro</h1><p>什么是 Shiro</p>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cDovL3NoaXJvLmFwYWNoZS5vcmcv\">http://shiro.apache.org/</span></p>\n<p>是一款主流的 Java 安全框架，不依赖任何容器，可以运行在 Java SE 和 Java EE 项目中，它的主要作用是对访问系统的用户进行身份认证、授权、会话管理、加密等操作。</p>\n<p>Shiro 就是用来解决安全管理的系统化框架。</p>\n<h1 id=\"Shiro-核心组件\"><a href=\"#Shiro-核心组件\" class=\"headerlink\" title=\"Shiro 核心组件\"></a>Shiro 核心组件</h1><p>用户、角色、权限</p>\n<p>会给角色赋予权限，给用户赋予角色</p>\n<p>1、UsernamePasswordToken，Shiro 用来封装用户登录信息，使用用户的登录信息来创建令牌 Token。</p>\n<p>2、SecurityManager，Shiro 的核心部分，负责安全认证和授权。</p>\n<p>3、Suject，Shiro 的一个抽象概念，包含了用户信息。</p>\n<p>4、Realm，开发者自定义的模块，根据项目的需求，验证和授权的逻辑全部写在 Realm 中。</p>\n<p>5、AuthenticationInfo，用户的角色信息集合，认证时使用。</p>\n<p>6、AuthorzationInfo，角色的权限信息集合，授权时使用。</p>\n<p>7、DefaultWebSecurityManager，安全管理器，开发者自定义的 Realm 需要注入到 DefaultWebSecurityManager 进行管理才能生效。</p>\n<p>8、ShiroFilterFactoryBean，过滤器工厂，Shiro 的基本运行机制是开发者定制规则，Shiro 去执行，具体的执行操作就是由 ShiroFilterFactoryBean 创建的一个个 Filter 对象来完成。</p>\n<p>Shiro 的运行机制如下图所示。</p>\n<p><img data-src=\"C:\\Users\\ningn\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200604095125608.png\" alt=\"image-20200604095125608\"></p>\n<h1 id=\"Spring-Boot-整合-Shiro\"><a href=\"#Spring-Boot-整合-Shiro\" class=\"headerlink\" title=\"Spring Boot 整合 Shiro\"></a>Spring Boot 整合 Shiro</h1><p>1、创建 Spring Boot 应用，集成 Shiro 及相关组件，pom.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.shiro<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>shiro-spring<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.5.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.3.1.tmp<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.junit.vintage<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit-vintage-engine<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2、自定义 Shiro 过滤器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AccoutRealm</span> <span class=\"keyword\">extends</span> <span class=\"title\">AuthorizingRealm</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AccountService accountService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 授权</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> principalCollection</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> AuthorizationInfo <span class=\"title\">doGetAuthorizationInfo</span><span class=\"params\">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 认证</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> authenticationToken</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> AuthenticationException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> AuthenticationInfo <span class=\"title\">doGetAuthenticationInfo</span><span class=\"params\">(AuthenticationToken authenticationToken)</span> <span class=\"keyword\">throws</span> AuthenticationException </span>&#123;</span><br><span class=\"line\">        UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken;</span><br><span class=\"line\">        Account account = accountService.findByUsername(token.getUsername());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(account != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> SimpleAuthenticationInfo(account,account.getPassword(),getName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、配置类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ShiroConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ShiroFilterFactoryBean <span class=\"title\">shiroFilterFactoryBean</span><span class=\"params\">(<span class=\"meta\">@Qualifier(&quot;securityManager&quot;)</span> DefaultWebSecurityManager securityManager)</span></span>&#123;</span><br><span class=\"line\">        ShiroFilterFactoryBean factoryBean = <span class=\"keyword\">new</span> ShiroFilterFactoryBean();</span><br><span class=\"line\">        factoryBean.setSecurityManager(securityManager);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> factoryBean;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> DefaultWebSecurityManager <span class=\"title\">securityManager</span><span class=\"params\">(<span class=\"meta\">@Qualifier(&quot;accoutRealm&quot;)</span> AccoutRealm accoutRealm)</span></span>&#123;</span><br><span class=\"line\">        DefaultWebSecurityManager manager = <span class=\"keyword\">new</span> DefaultWebSecurityManager();</span><br><span class=\"line\">        manager.setRealm(accoutRealm);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> manager;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> AccoutRealm <span class=\"title\">accoutRealm</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> AccoutRealm();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编写认证和授权规则：</p>\n<blockquote>\n<p>认证过滤器</p>\n</blockquote>\n<p>anon：无需认证。</p>\n<p>authc：必须认证。</p>\n<p>authcBasic：需要通过 HTTPBasic 认证。</p>\n<p>user：不一定通过认证，只要曾经被 Shiro 记录即可，比如：记住我。</p>\n<blockquote>\n<p>授权过滤器</p>\n</blockquote>\n<p>perms：必须拥有某个权限才能访问。</p>\n<p>role：必须拥有某个角色才能访问。</p>\n<p>port：请求的端口必须是指定值才可以。</p>\n<p>rest：请求必须基于 RESTful，POST、PUT、GET、DELETE。</p>\n<p>ssl：必须是安全的 URL 请求，协议 HTTPS。</p>\n<p>创建 3 个页面，main.html、manage.html、administrator.html</p>\n<p>访问权限如下：</p>\n<p>1、必须登录才能访问 main.html</p>\n<p>2、当前用户必须拥有 manage 授权才能访问 manage.html</p>\n<p>3、当前用户必须拥有 administrator 角色才能访问 administrator.html</p>\n<blockquote>\n<p>Shiro 整合 Thymeleaf</p>\n</blockquote>\n<p>1、pom.xml 引入依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.theborakompanioni<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>thymeleaf-extras-shiro<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2、配置类添加 ShiroDialect</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ShiroDialect <span class=\"title\">shiroDialect</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ShiroDialect();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、index.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span> <span class=\"attr\">xmlns:th</span>=<span class=\"string\">&quot;http://www.thymeleaf.org&quot;</span> <span class=\"attr\">xmlns:shiro</span>=<span class=\"string\">&quot;http://www.thymeleaf.org/thymeleaf-extras-shiro&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;shortcut icon&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">th:if</span>=<span class=\"string\">&quot;$&#123;session.account != null&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">th:text</span>=<span class=\"string\">&quot;$&#123;session.account.username&#125;+&#x27;欢迎回来！&#x27;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/logout&quot;</span>&gt;</span>退出<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/main&quot;</span>&gt;</span>main<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">shiro:hasPermission</span>=<span class=\"string\">&quot;manage&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;manage&quot;</span>&gt;</span>manage<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">shiro:hasRole</span>=<span class=\"string\">&quot;administrator&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/administrator&quot;</span>&gt;</span>administrator<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/2020/12/24/%E5%85%B3%E4%BA%8ESsm%E4%BD%BF%E7%94%A8pagehelper%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2020/12/24/%E5%85%B3%E4%BA%8ESsm%E4%BD%BF%E7%94%A8pagehelper%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/",
            "title": "关于ssm使用pagehelper失效问题",
            "date_published": "2020-12-24T09:16:23.450Z",
            "content_html": "<h1 id=\"关于ssm使用pagehelper失效问题：\"><a href=\"#关于ssm使用pagehelper失效问题：\" class=\"headerlink\" title=\"关于ssm使用pagehelper失效问题：\"></a>关于ssm使用pagehelper失效问题：</h1><h1 id=\"pom依赖：\"><a href=\"#pom依赖：\" class=\"headerlink\" title=\"pom依赖：\"></a>pom依赖：</h1><pre><code>  &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;\n\n  &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;\n\n  &lt;version&gt;5.1.4&lt;/version&gt;</code></pre>\n<h1 id=\"SpringMVC-xml：\"><a href=\"#SpringMVC-xml：\" class=\"headerlink\" title=\"SpringMVC.xml：\"></a>SpringMVC.xml：</h1><pre><code>&lt;context:component-scan base-package=&quot;com.hp.controller&quot;/&gt;\n\n&lt;mvc:annotation-driven/&gt;\n\n&lt;mvc:default-servlet-handler/&gt;\n\n\n&lt;bean id=&quot;templateResolver&quot; class=&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;&gt;\n    &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/&quot;/&gt;\n    &lt;property name=&quot;suffix&quot; value=&quot;.html&quot;/&gt;\n    &lt;property name=&quot;characterEncoding&quot; value=&quot;UTF-8&quot;/&gt;\n    &lt;property name=&quot;order&quot; value=&quot;1&quot;/&gt;\n    &lt;property name=&quot;templateMode&quot; value=&quot;HTML5&quot;/&gt;\n    &lt;property name=&quot;cacheable&quot; value=&quot;false&quot;/&gt;\n&lt;/bean&gt;\n\n&lt;bean id=&quot;templateEngine&quot;\n      class=&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;&gt;\n    &lt;property name=&quot;templateResolver&quot; ref=&quot;templateResolver&quot;/&gt;\n&lt;/bean&gt;\n\n&lt;bean id=&quot;viewResolver&quot; class=&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;&gt;\n    &lt;property name=&quot;templateEngine&quot; ref=&quot;templateEngine&quot;/&gt;\n    &lt;property name=&quot;characterEncoding&quot; value=&quot;UTF-8&quot;/&gt;\n&lt;/bean&gt;</code></pre>\n<h1 id=\"MybatisConfig-xml：\"><a href=\"#MybatisConfig-xml：\" class=\"headerlink\" title=\"MybatisConfig.xml：\"></a>MybatisConfig.xml：</h1><pre><code>      &lt;plugin interceptor=&quot;com.github.pagehelper.PageInterceptor&quot;&gt;\n            &lt;!--分页参数合理化  --&gt;\n          &lt;property name=&quot;reasonable&quot; value=&quot;true&quot;/&gt;\n        &lt;/plugin&gt;</code></pre>\n<h1 id=\"控制器Controller：\"><a href=\"#控制器Controller：\" class=\"headerlink\" title=\"控制器Controller：\"></a>控制器Controller：</h1><pre><code>@RequestMapping(&quot;index&quot;)\npublic String selectall(Model model, @RequestParam(value = &quot;pageNum&quot;,defaultValue = &quot;1&quot;) Integer pageNum)&#123;\n    PageHelper.startPage(pageNum,5);\n    List&lt;Department&gt; list = departmentService.selectAll();\n    PageInfo&lt;Department&gt; pageInfo = new PageInfo&lt;&gt;(list);\n    model.addAttribute(&quot;pageInfo&quot;,pageInfo);\n    return &quot;index&quot;;\n&#125;</code></pre>\n<h1 id=\"前端分页代码\"><a href=\"#前端分页代码\" class=\"headerlink\" title=\"前端分页代码\"></a>前端分页代码</h1><tr align=\"center\">\n\n<pre><code>    &lt;td colspan=&quot;7&quot;&gt;\n        &lt;div&gt;\n            &lt;div&gt;\n                当前第[[$&#123;pageInfo.pageNum&#125;]]页，共[[$&#123;pageInfo.pages&#125;]]页，共[[$&#123;pageInfo.total&#125;]]条记录 &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;!-- 分页导航条 --&gt;\n        &lt;div&gt;\n            &lt;a th:href=&quot;@&#123;/index&#125;&quot;&gt;&lt;span&gt;首页&lt;/span&gt;&lt;/a&gt;\n            &lt;a th:href=&quot;@&#123;/index/(pageNum=$&#123;pageInfo.hasPreviousPage&#125;?$&#123;pageInfo.prePage&#125;:1)&#125;&quot;&gt;&lt;span&gt;上一页&lt;/span&gt;&lt;/a&gt;\n            &lt;!-- 遍历导航页 --&gt;\n            &lt;a th:each=&quot;page,pageStat:$&#123;pageInfo.navigatepageNums&#125;&quot;\n               th:href=&quot;@&#123;/index/(pageNum=$&#123;page&#125;)&#125;&quot;&gt;\n                                    &lt;span th:if=&quot;$&#123;page&#125;==$&#123;pageInfo.pageNum&#125;&quot;&gt;\n                                        &lt;span th:text=&quot;$&#123;page&#125;&quot;&gt;&lt;/span&gt;\n                                    &lt;/span&gt;\n                &lt;span th:if=&quot;$&#123;page&#125;!=$&#123;pageInfo.pageNum&#125;&quot;&gt;\n                                        &lt;span th:text=&quot;$&#123;page&#125;&quot;&gt;&lt;/span&gt;\n                                    &lt;/span&gt;\n            &lt;/a&gt;\n            &lt;!-- 导航页 --&gt;\n            &lt;a th:href=&quot;@&#123;/index/(pageNum=$&#123;pageInfo.hasNextPage&#125;?$&#123;pageInfo.nextPage&#125;:$&#123;pageInfo.pages&#125;)&#125;&quot;&gt;&lt;span&gt;下一页&lt;/span&gt;&lt;/a&gt;\n            &lt;a th:href=&quot;@&#123;/index/(pageNum=$&#123;pageInfo.pages&#125;)&#125;&quot;&gt;&lt;span&gt;尾页&lt;/span&gt;&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/td&gt;\n&lt;/tr&gt;</code></pre>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2020/12/24/springboot%E6%95%B4%E5%90%88redis/",
            "url": "http://example.com/2020/12/24/springboot%E6%95%B4%E5%90%88redis/",
            "title": "Spring Boot整合Redis",
            "date_published": "2020-12-24T06:40:28.104Z",
            "content_html": "<h1 id=\"Spring-Boot整合Redis：\"><a href=\"#Spring-Boot整合Redis：\" class=\"headerlink\" title=\"Spring Boot整合Redis：\"></a>Spring Boot整合Redis：</h1><p>基于内存进行存储，支持key-value的存储形式，底层是用C语言编写的<br>基于key-value形式的数据字典，结构非常简单，没有数据表的概念，直接用键值对的形式完成对数据的管理，Redis支持五种数据类型<br>1.字符串<br>2.列表<br>3.集合<br>4.有序集合<br>5.哈希</p>\n<h1 id=\"创建maven工程：\"><a href=\"#创建maven工程：\" class=\"headerlink\" title=\"创建maven工程：\"></a>创建maven工程：</h1><pre><code>&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;\n        &lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n        &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;</code></pre>\n<h1 id=\"创建实体类，实现序列化接口：\"><a href=\"#创建实体类，实现序列化接口：\" class=\"headerlink\" title=\"创建实体类，实现序列化接口：\"></a>创建实体类，实现序列化接口：</h1><p>@Data<br>//实现序列化接口，否则无法存入redis<br>public class Student implements Serializable {<br>    private Integer id;<br>    private String name;<br>    private Double score;<br>    private Date birthday;<br>}</p>\n<h1 id=\"创建控制器学习产出：\"><a href=\"#创建控制器学习产出：\" class=\"headerlink\" title=\"创建控制器学习产出：\"></a>创建控制器学习产出：</h1><p>@RestController<br>public class StudentHandler {</p>\n<pre><code>@Autowired\nprivate RedisTemplate redisTemplate;\n\n@PostMapping(&quot;/set&quot;)\n//Request将json数据转换成java对象\npublic void set(@RequestBody Student student)&#123;\n    redisTemplate.opsForValue().set(&quot;student&quot;,student);\n\n&#125;</code></pre>\n<p>}</p>\n<h1 id=\"创建配置文件appliacation-yml\"><a href=\"#创建配置文件appliacation-yml\" class=\"headerlink\" title=\"创建配置文件appliacation.yml\"></a>创建配置文件appliacation.yml</h1><p>spring:<br>  redis:<br>    database: 0<br>    host: localhost<br>    port: 6379# 创建配置文件appliacation.yml</p>\n<h1 id=\"创建启动类\"><a href=\"#创建启动类\" class=\"headerlink\" title=\"创建启动类\"></a>创建启动类</h1><p>@SpringBootApplication<br>public class Application {<br>    public static void main(String[] args) {<br>        SpringApplication.run(Application.class,args);<br>    }<br>}</p>\n<h1 id=\"CRUD\"><a href=\"#CRUD\" class=\"headerlink\" title=\"CRUD\"></a>CRUD</h1><p>@RestController<br>public class StudentHandler {</p>\n<pre><code>@Autowired\nprivate RedisTemplate redisTemplate;\n\n@PostMapping(&quot;/set&quot;)\n//Request将json数据转换成java对象\npublic void set(@RequestBody Student student)&#123;\n    redisTemplate.opsForValue().set(&quot;student&quot;,student);\n\n&#125;\n\n@GetMapping(&quot;/get/&#123;key&#125;&quot;)\npublic Student get(@PathVariable(&quot;key&quot;) String key)&#123;\n    return (Student) redisTemplate.opsForValue().get(key);\n&#125;\n\n@DeleteMapping(&quot;/delete/&#123;key&#125;&quot;)\npublic boolean delete(@PathVariable(&quot;key&quot;) String key)&#123;\n    redisTemplate.delete(key);\n    return redisTemplate.hasKey(key);\n&#125;</code></pre>\n<p>}</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2020/12/24/vue%E5%9F%BA%E7%A1%80/",
            "url": "http://example.com/2020/12/24/vue%E5%9F%BA%E7%A1%80/",
            "title": "Vue基础",
            "date_published": "2020-12-24T06:20:52.720Z",
            "content_html": "<h1 id=\"Vue基础\"><a href=\"#Vue基础\" class=\"headerlink\" title=\"Vue基础\"></a>Vue基础</h1><h1 id=\"el-挂载点\"><a href=\"#el-挂载点\" class=\"headerlink\" title=\"el:挂载点\"></a>el:挂载点</h1><p>vue实例的作用范围是什么呢？<br>vue会管理el选项命中的元素极其内容的后代元素<br>可以使用其他选择器<br>可以使用双标签，不能使用HTML和BODY</p>\n<h1 id=\"Data\"><a href=\"#Data\" class=\"headerlink\" title=\"Data\"></a>Data</h1><p>vue中用到的数据定义在data中<br>data中可以写复杂类型的数据<br>渲染复杂类型数据时，遵守js的语法即可</p>\n<h1 id=\"v-html指令\"><a href=\"#v-html指令\" class=\"headerlink\" title=\"v-html指令\"></a>v-html指令</h1><p>设置元素的innerHTML<br>内容中有html结构会被解析为标签<br>v-text指令无论内容是什么，只会解析为文本<br>v-text和v-html不能使用在div中</p>\n<h1 id=\"v-on\"><a href=\"#v-on\" class=\"headerlink\" title=\"v-on\"></a>v-on</h1><p>为元素绑定事件<br>点击click 鼠标移入monseenter 双击dbclick<br>事件名不需要写on<br>指令可以简写为@<br>绑定的方法定义在methods属性中<br>方法内部通过this关键字可以访问在data中数据</p>\n<h1 id=\"v-show指令\"><a href=\"#v-show指令\" class=\"headerlink\" title=\"v-show指令\"></a>v-show指令</h1><p>根据真假切换元素的显示状态<br>原理是修改元素的display,实现显示隐藏<br>指令后面的内容，最终都会解析为boolean(布尔值)<br>值为true元素显示,值为false元素隐藏<br>数据改变之后，对应元素的显示状态会同步更新</p>\n<h1 id=\"v-if指令\"><a href=\"#v-if指令\" class=\"headerlink\" title=\"v-if指令\"></a>v-if指令</h1><p>根据表达式的真假切换元素的显示状态<br>本质是通过操纵dom元素来切换显示状态<br>表达式的值为true，元素存在于dom树中，为false，从dom树中移除<br>频繁的切换v-show,反之使用v-if，前者的    切换消耗小</p>\n<h1 id=\"v-bind-指令\"><a href=\"#v-bind-指令\" class=\"headerlink\" title=\"v-bind 指令\"></a>v-bind 指令</h1><p>为元素绑定属性<br>完整写法是v-bind：属性名<br>简写可以省略v-bind 只保留：属性名<br>需要动态的增删class建议使用对象的方式</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>列表数据使用数组保存<br>v-bind指令可以设置元素属性，比如src<br>v-show和v-if都可以切换元素的显示状态，频繁切换使用v-show</p>\n<h1 id=\"V-for指令\"><a href=\"#V-for指令\" class=\"headerlink\" title=\"V-for指令\"></a>V-for指令</h1><p>根据数据生产列表结构<br>数组经常和v-for结合使用<br>语法是（item，index）in 数据<br>Item 和 index 可以结合其他指令一起使用<br>数组长度的更新会同步到页面上，是响应式的</p>\n<h1 id=\"v-on指令补充\"><a href=\"#v-on指令补充\" class=\"headerlink\" title=\"v-on指令补充\"></a>v-on指令补充</h1><p>事件绑定的方法写成函数调用的形式<br>定义方法时需要定义形参来接受传入的实参<br>事件的后面跟上 .修饰符 可以对事件进行限制<br>.enter 可以限制触发的按键为回车</p>\n<h1 id=\"Axios\"><a href=\"#Axios\" class=\"headerlink\" title=\"Axios\"></a>Axios</h1><p>axios必须先导入才可以使用<br>使用get或post方法即可发送对应的请求<br>then方法中的回调函数会在请求成功或失败时触发<br>通过回调函数的形参可以获取响应内容，或错误信息</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2020/12/24/%E8%A7%A3%E5%86%B3Spring%20Boot%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2020/12/24/%E8%A7%A3%E5%86%B3Spring%20Boot%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/",
            "title": "解决Spring Boot前后端分离跨域问题",
            "date_published": "2020-12-24T05:47:01.074Z",
            "content_html": "<h1 id=\"解决Spring-Boot前后端分离跨域问题\"><a href=\"#解决Spring-Boot前后端分离跨域问题\" class=\"headerlink\" title=\"解决Spring Boot前后端分离跨域问题\"></a>解决Spring Boot前后端分离跨域问题</h1><h1 id=\"一、在IDEA中添加配置文件\"><a href=\"#一、在IDEA中添加配置文件\" class=\"headerlink\" title=\"一、在IDEA中添加配置文件\"></a>一、在IDEA中添加配置文件</h1><p>package com.lf.config;</p>\n<p>import org.springframework.context.annotation.Configuration;<br>import org.springframework.web.servlet.config.annotation.CorsRegistry;<br>import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</p>\n<p>@Configuration<br>public class Config implements WebMvcConfigurer {</p>\n<pre><code>@Override\npublic void addCorsMappings(CorsRegistry registry) &#123;\n    registry.addMapping(&quot;/**&quot;)\n            .allowedOrigins(&quot;*&quot;)\n            .allowedMethods(&quot;GET&quot;,&quot;HEAD&quot;,&quot;POST&quot;,&quot;PUT&quot;,&quot;DELETE&quot;,&quot;OPTIONS&quot;)\n            .allowCredentials(true)\n            .maxAge(3600)\n            .allowedHeaders(&quot;*&quot;);\n&#125;</code></pre>\n<p>}</p>\n",
            "tags": []
        }
    ]
}